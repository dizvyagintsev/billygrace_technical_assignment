name: CI
on: [push, pull_request]
jobs:
  Checks:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      POSTGRES_DSN: postgresql://postgres:postgres@localhost:5432/postgres
      API_BASE_URL: http://localhost:8080
      FRONTEND_PORT: 3000

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install backend dependencies
        run: pip install -r backend/requirements.txt

      - name: Set up Node.js 21
        uses: actions/setup-node@v4
        with:
          node-version: 21
          cache: 'yarn'
          cache-dependency-path: frontend/yarn.lock

      - name: Install frontend dependencies
        working-directory: frontend
        run: yarn install

      - name: Static code check Python
        run: make python_check

      - name: Static code check JavaScript
        run: make jscheck

      - name: Backend unit tests
        run: make test_backend

      - name: Run Migrations
        working-directory: backend
        run: |
          for f in db_migrations/*.sql; do
            psql ${{ env.POSTGRES_DSN }} -f $f
          done

      - name: Integration tests with database
        run: make test_backend_integration

      - name: Start frontend and backend for e2e tests
        env:
          JWT_SECRET_KEY: dummy_secret
          JWT_ALGORITHM: HS256
          JWT_TTL_MINUTES: 30
        run: docker compose -f docker-compose-ci.yml up -d

      - name: Install Playwright Browsers
        working-directory: frontend
        run: npx playwright install --with-deps

      - name: Run e2e tests with Playwright
        run: make test_e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30

      - name: Log backend logs on Failure
        if: failure()
        run: docker logs backend
