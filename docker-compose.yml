version: '3.8'

services:
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - "${API_PORT}:8080"
    environment:
      - POSTGRES_DSN=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_TTL_MINUTES=${JWT_TTL_MINUTES}
    command: ["fastapi", "run", "app/main.py", "--port", "8080"]
    container_name: backend
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        - API_BASE_URL=http://localhost:${API_PORT} # This environment variable is used in the frontend Dockerfile
    ports:
      - "${FRONTEND_PORT}:80"
    container_name: frontend
    depends_on:
      - backend

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db_migrations:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    container_name: db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]

volumes:
  postgres_data:

